{{- define "mixed"}}
    {
      "type": "mixed",
      "tag": "mixed-in",
      "listen": "::",
      "listen_port": 7899,
      "set_system_proxy": false
    }
{{- end -}}
{{- define "mixed-with-system-proxy"}}
    {
      "type": "mixed",
      "tag": "mixed-in",
      "listen": "::",
      "listen_port": 7899,
      "set_system_proxy": true
    }
{{- end -}}
{{- define "tun"}}
    {
      "type": "tun",
      "tag": "tun-in",
      "interface_name": "tun0",
      "address": "172.18.0.1/30",
      "mtu": 9000,
      "auto_route": true,
      {{- if .Opts.Android}}
      "platform": {
        "http_proxy": {
          "enabled": false,
          "server": "127.0.0.1",
          "server_port": 7988
        }
      }
      {{- else}}
      "auto_redirect": true
      {{- end}}
    }
{{- end -}}
{
  "log": {
    "disabled": false,
    "level": "info",
    "output": "box.log",
    "timestamp": true
  },
  "experimental": {
    {{- if .Opts.WebUIEnabled}}
    "clash_api": {
      "external_controller": "{{.Opts.WebUIAddr}}",
      "external_ui": "./ui/",
      "external_ui_download_detour": "{{.Pc.NodeSelect}}",
      "secret": "",
      "default_mode": "rule"
    },
    {{- end}}
    "cache_file": {
      "enabled": true
    }
  },
  "dns": {
    "servers": [
      {
        "tag": "dns-proxy",
        "address": "https://8.8.8.8/dns-query",
        "strategy": "prefer_ipv4",
        "detour": "{{.Pc.NodeSelect}}"
      },
      {
        "tag": "dns-direct",
        "address": "https://dns.alidns.com/dns-query",
        "address_resolver": "dns-114",
        "address_strategy": "prefer_ipv4",
        "strategy": "prefer_ipv4",
        "detour": "DIRECT"
      },
      {
        "tag": "dns-114",
        "address": "114.114.114.114",
        "strategy": "prefer_ipv4",
        "detour": "DIRECT"
      }
    ],
    "rules": [
      { "outbound": "any", "server": "dns-direct", "disable_cache": true },
      { "clash_mode": "direct", "server": "dns-direct" },
      { "clash_mode": "global", "server": "dns-proxy" },
      {{- range .Pc.Rules}}
      { "rule_set": "{{.RuleSet}}", "action": "route", "server": {{- if isDirect .Outbound}} "dns-direct" {{- else}} "dns-proxy" {{- end}}},
      {{- end}}
      { "rule_set": "geosite-cn", "action": "route", "server": "dns-direct" },
      { "rule_set": "geosite-gfw", "action": "route", "server": "dns-proxy" }
    ],
    "final": "dns-proxy",
    "strategy": "prefer_ipv4"
  },
  "inbounds": [
  {{- if eq .Opts.Mode "mixed"}}
  {{- template "mixed" .}}
  {{- else if eq .Opts.Mode "mixed-sp"}}
  {{- template "mixed-with-system-proxy" .}}
  {{- else if eq .Opts.Mode "tun"}}
  {{- template "tun" .}}
  {{- end}}
  ],
  "outbounds": [
    {{- range .Pc.Outbounds}}
    {
      "type": "{{.Type}}",
      "tag": "{{.Tag}}",
      {{- if eq .Type "shadowsocks"}}
      {{- with .Data}}
      "server": "{{.Server}}",
      "server_port": {{.ServerPort}},
      "method": "{{.Method}}",
      "password": "{{.Password}}",
      "network": "{{.Network}}"
      {{- end}}
      {{- else if eq .Type "trojan"}}
      {{- with .Data}}
      "server": "{{.Server}}",
      "server_port": {{.ServerPort}},
      "password": "{{.Password}}",
      "network": "{{.Network}}",
      {{- with .Tls}}
      "tls": {
        "enabled": {{.Enabled}},
        "server_name": "{{.ServerName}}"
      }
      {{- end}}
      {{- end}}
      {{- else if eq .Type "selector"}}
      {{- with .Data}}
      "interrupt_exist_connections": {{.InterruptExistConnections}},
      "outbounds": [
      {{- range $idx, $ele := .Outbounds}}
        {{- if $idx}},{{end}}
        "{{$ele}}"
      {{- end}}
      ]
      {{- end}}
      {{- else if eq .Type "urltest"}}
      {{- with .Data}}
      "url": "{{.Url}}",
      "interval": "{{.Interval}}",
      "tolerance": {{.Tolerance}},
      "interrupt_exist_connections": {{.InterruptExistConnections}},
      "outbounds": [
      {{- range $idx, $ele := .Outbounds}}
        {{- if $idx}},{{end}}
        "{{$ele}}"
      {{- end}}
      ]
      {{- end}}
      {{- end}}
    },
    {{- end}}
    {
      "tag": "DIRECT",
      "type": "direct"
    },
    {
      "tag": "OPENAI",
      "type": "urltest",
      "url": "http://www.gstatic.com/generate_204",
      "tolerance": 50,
      "interrupt_exist_connections": false,
      "interval": "5m",
      "outbounds": [
      {{- range $idx, $ele := nodeFilter .Pc.NodeNames "台湾"}}
        {{- if $idx}},{{end}}
        "{{$ele}}"
      {{- end}}
      ]
    }
  ],
  "route": {
    "rules": [
      { "action": "sniff" },
      { "protocol": "dns", "action": "hijack-dns" },
      { "clash_mode": "direct", "outbound": "DIRECT" },
      { "clash_mode": "global", "outbound": "{{.Pc.NodeSelect}}" },
      {
        "rule_set": ["geosite-private", "geoip-private"],
        "outbound": "DIRECT"
      },
      { "rule_set": "geosite-openai", "outbound": "OPENAI" },
      {{- range .Pc.Rules}}
      { "rule_set": "{{.RuleSet}}", "outbound": "{{.Outbound}}"},
      {{- end}}
      { "rule_set": "geosite-gfw", "outbound": "{{.Pc.NodeSelect}}" },
      { "rule_set": ["geosite-cn", "geoip-cn"], "outbound": "DIRECT" }
    ],
    {{- if .Opts.Android}}
    "override_android_vpn": true,
    {{- end}}
    "auto_detect_interface": true,
    "final": "{{.Pc.Escapes}}",
    "rule_set": [
      {
        "tag": "geosite-private",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/private.srs",
        "download_detour": "{{.Pc.NodeSelect}}"
      },
      {
        "tag": "geosite-cn",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/cn.srs",
        "download_detour": "{{.Pc.NodeSelect}}"
      },
      {
        "tag": "geosite-openai",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/openai.srs",
        "download_detour": "{{.Pc.NodeSelect}}"
      },
      {
        "tag": "geosite-gfw",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geosite/gfw.srs",
        "download_detour": "{{.Pc.NodeSelect}}"
      },

      {
        "tag": "geoip-cn",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geoip/cn.srs",
        "download_detour": "{{.Pc.NodeSelect}}"
      },
      {{- range .Pc.InlineRuleSet}}
      {
        "type": "inline",
        "tag": "{{.Tag}}",
        "rules": [
          {
            {{- range $i, $e := .HeadlessRule.Conditions}}
            {{- if $i}},{{end}}
            "{{$e.Name}}": [
            {{- range $idx, $ele := $e.Value}}
            {{- if $idx}},{{end}}
              "{{$ele}}"
            {{- end}}
            ]
            {{- end}}
          }
        ]
      },
      {{- end}}
      {
        "tag": "geoip-private",
        "type": "remote",
        "format": "binary",
        "url": "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/sing/geo/geoip/private.srs",
        "download_detour": "{{.Pc.NodeSelect}}"
      }
    ]
  }
}
